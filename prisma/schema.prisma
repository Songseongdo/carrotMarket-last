generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  userId     String     @unique
  username   String
  password   String
  email      String?
  bio        String?
  avatar     Int?
  create_at  DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Tweet      Tweet[]
  Like       Like[]
  Response   Response[]
}

model Tweet {
  id         Int        @id @default(autoincrement())
  tweet      String
  create_at  DateTime   @default(now())
  updated_at DateTime   @updatedAt
  user       User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId     Int?
  Like       Like[]
  photo      String?
  Response   Response[]
}

model Like {
  id        Int      @id @default(autoincrement())
  create_at DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
}

model Response {
  id        Int      @id @default(autoincrement())
  comment   String
  photo     String?
  create_at DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
}
